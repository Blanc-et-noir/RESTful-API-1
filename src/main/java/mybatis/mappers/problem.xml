<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="problem">
	<select id="getCategories" parameterType="java.util.HashMap" resultType="java.util.HashMap">
		SELECT *
		FROM categories
	</select>
	
	<select id="getProblems" parameterType="java.util.HashMap" resultType="java.util.HashMap">
		SELECT t2.problem_id, t2.problem_content, t2.problem_image_name, t2.choice_id, t2.choice_content, t2.choice_yn, NVL(t3.pick_rate,0) AS "pick_rate"
		FROM(
			SELECT *
			FROM(
				SELECT *
				FROM problems
				WHERE category_id = ${category_id}
				ORDER BY RAND()
				LIMIT ${limit}
			)AS t1 NATURAL JOIN choices
		)AS t2 LEFT JOIN (
			SELECT DISTINCT problem_id, choice_id, ROUND(COUNT(*) OVER(PARTITION BY problem_id,choice_id)/COUNT(*) OVER(PARTITION BY problem_id),2)*100 AS "pick_rate"
			FROM records
		)AS t3 ON t2.choice_id = t3.choice_id;
	</select>	
	
	<select id="getPickrate" parameterType="java.util.HashMap" resultType="java.util.HashMap">
		SELECT category_id, problem_id, problem_content,problem_image_name, choice_id, choice_content, choice_yn
		FROM(
			SELECT *
			FROM problems
			WHERE category_id = ${category_id}
			ORDER BY RAND()
			LIMIT ${limit}
		)AS t1 NATURAL JOIN choices
		ORDER BY RAND()
	</select>	
	
	<select id="getChoices" parameterType="java.util.HashMap" resultType="java.util.HashMap">
		SELECT *
		FROM choices
		<where>
			<foreach collection="problems" item="item" open="problem_id IN(" separator="," close=")">
				${item.problem_id}
			</foreach>
		</where>
	</select>
	
	<select id="getChoicesInfo" parameterType="java.util.HashMap" resultType="java.util.HashMap">
		SELECT *
		FROM choices
		<where>
			<foreach collection="list" item="item" open="(problem_id,choice_id) IN(" separator="," close=")">
				(${item.problem_id},${item.answer_id})
			</foreach>
		</where>
	</select>
	
	<update id="updateChoiceCounts" parameterType="java.util.HashMap">
		UPDATE choices
		SET choice_count = choice_count + 1
		<where>
			(problem_id, choice_id) IN
			<foreach collection="list" close=")" open="(" separator="," item="item">
				(${item.problem_id},${item.answer_id})
			</foreach>
		</where>
	</update>
	
	<insert id="insertRecords" parameterType="java.util.HashMap">
		INSERT INTO records(problem_id,choice_id,user_id) VALUES
		<foreach collection="list" item="item" separator=",">
			(${item.problem_id},${item.answer_id},#{item.user_id})
		</foreach>
	</insert>
</mapper>